:root {
    --color-gold: rgb(231, 224, 181);
    --color-white: #fff; 
    --color-burgundy: #3E171E;
}

html {
    scroll-behavior: smooth;
}

* {
    margin:0;
    padding:0;
    box-sizing: border-box;
    font-family: 'Inter', sans-serif;
}

body {
    display:grid;
    grid-template-columns: repeat(1, minmax(0, 1fr));
    padding: 4rem 2rem;
    gap: 6rem;
    background: linear-gradient(#3E171E, #995a65);
    background-attachment: fixed;
    color:#d0aba9;
}

p {
    line-height: 1.5rem;
}

p::selection, 
h1::selection, 
h2::selection, 
h3::selection, 
h4::selection, 
h5::selection, 
h6::selection {
    color: var(--color-burgundy);
    background: var(--color-gold);
}

a {
    cursor:pointer;
}

header {
    display: flex;
    flex-direction: column;
    gap:1rem;
    max-width: 240px;
}

header h1,
header h4,
.lightText {
    color: var(--color-gold);
}

header h1 {
    font-weight: 600;
}

header h4 {
    font-weight: 400;
}

nav {
    display: none;
}

nav a {
    font-size:0.9rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

nav a:hover .nav-line { /*when you hover over the nav anchor, the nav-line will have these features.*/
    background: var(--color-gold);
    width: 28px;
}

.nav-line {
    height: 1px;
    width: 20px;
    background: var(--color-white);
    transition-duration: 200ms;
}

.social-link-container {
    display: flex;
    gap:1rem;
}

.social-links {
    font-size: 1.5rem;
    color: inherit;
    text-decoration: none;
    transition-duration: 200ms;
}

.social-links:hover {
    color: var(--color-gold);
}

main {
    display: flex;
    flex-direction: column;
    gap:6rem;
}

section {
    display: flex;
    flex-direction: column;
    gap:2rem; 
}

section h2 {
    text-transform: uppercase;
    font-size: 1rem;
    font-weight: 500;
}

/*.sticky-header {
    position: sticky;
    top:0;
    padding: 0.5rem 0;
} */

/*.sticky-header::before { not much to this, you added more
    content: '';   
    inset: 0; MISSED. sets the distance between an element and the parent element
    background: var(--color-burgundy);
    position: absolute;
    opacity: 0.8;
} */

/*.sticky-header h2 {
    position: relative; this means you can change the position of this element relative to it's normal position. missed
    z-index: 2; 

} */


.experience-card, /*this works out on the cell phone! you don't need to do display flex.*/
.project-card {
    display: grid;
    grid-template-columns: repeat(1, minmax(0,1fr)); /*1 means there is just 1 column*/
    gap:1rem;
}

.about-contents {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.about-contents p {
    font-size: 1.1rem;
}

.lightText {
    color: var(--color-white);
}

.tag-container {
    display: flex;
    gap:1rem;
}

.dates {
    font-size: 0.9rem;
}

.card-column { /*missed*/
    display: flex;
    flex-direction: column;
    gap:1rem;
}

.card-column a,
.dates {
    text-transform: uppercase;
}

.tag {
    padding: 0.15rem 0.5rem;
    background: var(--color-gold);
    color: var(--color-burgundy);
    font-weight: 650;;
    border-radius: 0.5rem;
    border: ridge white;
    box-shadow: inset 0px 0px 10px 3px var(--color-burgundy);
    cursor: default;
}

.resume-and-archive-link {
    color: var(--color-white);
    font-size: 1.1rem;
    position: relative; /*looked up. "I'm absolutely attached to my relatives!" */ 
    margin-right: auto; /*looked up. if you don't do this the underline will go all the way to the right of the page.*/
    text-decoration: none;
}

.resume-and-archive-link span {
    transition-duration: 200ms;
}

.resume-and-archive-link:hover span {
    padding-left:0.5rem;
}

.resume-and-archive-link::after { /*you also had hover here, needed to take it out*/
    content: '';
    height: 1.5px; /*you had a background here*/
    width: 100%;
    bottom:0;
    left: 0;
    position: absolute;
    background: transparent; /*forgot*/
    transition-duration: 200ms; /*you did this a moment ago for the arrow, but now again for the underline.*/
}

.resume-and-archive-link:hover::after { /*missed this section entirely*/
    background: var(--color-gold); /*color comes at the very end!*/
}

.anchor-text {
    color: var(--color-white);
    text-decoration: none;
    transition-duration: 200ms;
  
}

.anchor-text:hover {
    color: var(--color-gold);
}

.experience-contents,
.project-contents {
    display: flex;
    flex-direction: column;
    gap:4rem;
}

.experience-contents,
.project-contents {
    display: grid;
    grid-template-columns: repeat(1, minmax(0,1fr));
}

.star-rating {
    color: var(--color-white);
    transition-duration: 200ms;
    align-items: center;
    font-size: 0.9rem;
}

.star-rating:hover {
 color: var(--color-gold);
}

.project-image-container { /*It's good practice to make a container for every image because sometimes when you try to
    style an image alone it does strange things.*/
    max-width: 200px; /*missed*/
    overflow: hidden;
    display: grid;
    place-items: center;
    aspect-ratio: 16/9;
    border-radius: 0.25rem;
    order: 2;
}

.project-image-container img {
    object-fit: cover; /*missed*/
    width: 100%;
    height: 100%;
}

footer {
    display: flex;
    flex-direction: column;
    gap:2rem;
    justify-content: space-between;
    align-items: flex-start; /*looked up. for some reason the circle gets all wonky without this.*/
}

.scroll-to-top {
    height:2.5rem;
    aspect-ratio: 1 / 1;
    background: var(--color-gold);
    display:grid;
    place-items: center;
    color: var(--color-burgundy);
    transition-duration: 200ms;
    text-decoration: none;
    border-radius: 100%;
    border: ridge white;
    box-shadow: inset 0px 0px 10px 3px var(--color-burgundy);
}

.scroll-to-top:hover {
    opacity: 0.8;
}

a {
    color: var(--color-white);
    text-decoration: none;
}

.contact {
    font-size: 1.2rem;
}

.footer-container {
    display: flex;
    gap:7rem;
}

@media (min-width: 640px) { /*looked up, forgot : */

    body {
        padding: 5rem 3rem;
    }

    .experience-card,
    .project-card { /*missed*/
    grid-template-columns: repeat(4,minmax(0,1fr)); /*I thought it was 2, but it was 4. */
    }

    .card-column { 
        grid-column: span 3 / span 3; /*forgot grid-column style*/
    }

    .project-image-container {
        order:0;
    }

    header {
        max-width: unset; /*study*/
    }

    header h1 {
        font-size: 3rem;
    }

    header h4 {
        font-size: 1.4rem;
    }

    header p {
        max-width:315px; /*missed. this is how you get it to look nice without changing the entire header.*/
    }

    .social-link-container {
        gap:1.5rem;
    }

    .social-links {
        font-size: 2rem;
    }
}

@media (min-width:1020px) {

    header h1 {
        font-size: 3rem; 
    }

    body {
        grid-template-columns: repeat(2, minmax(0,1fr)); /*I put 1, not 2. 
        this alone does not put the page into 2 columns. you also need to */
        gap: 2rem;
        padding: 6rem;
        padding-top: 0; /*this allows the header to stay in place,
        but how can I get it to stay in place even when I scroll to the bottom?*/
    }

    header {
        position: sticky;
        top: 0;
        margin-left: auto; /*auto takes up all of the remaining space*/
        height: fit-content; /*MISSED UNTIL THE END!*/
        padding-bottom: 6rem; /*this is the only padding-bottom!!!*/
    }

    header h1 {
        font-size: 3rem;
    }

    header h4 {
        font-size: 1.4rem;
    }

    header p {
        max-width: 300px;
    }

    nav {
        /* MODIFIED POST TUTORIAL */
        padding: 2rem 0;
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
        flex: 1; /*MISSED UNTIL THE END!*/
    }

    nav a {
        font-size: 1rem;
    }

    .social-link-container {
        gap: 1.5rem;
    }

    .social-links {
        font-size: 2rem;
    }

    header,
    main {
        max-width: 700px; /*THIS WAS THE ENTIRE REASON THE FOOTER WASN'T EVENLY ALIGNED ON THE LEFT!!!!!!!!!!!*/
        width: 100%;
        padding-top: 6rem;
    }

    h2 {
        padding-top: 2rem;
    }

    .about-contents p {
        font-size: 1.1rem;
    }

    main {
        margin-right: auto; /*why?*/
    }

    .project-card,
    .experience-card {
        padding: 1rem;
        border-radius: 0.5rem;
        border: 1px solid transparent;
        transition-duration: 200ms;
    }

    /* ADDED POST TUTORIAL */
    .project-card:hover,
    .experience-card:hover {
        background: #632e38;
        border: 1px solid #94a3b826;
        box-shadow: 0 0 20px 3px #3E171E;
    }

    footer { 
        flex-direction: row; /*missed. apparently you said column before 
        so need to cange it to row here*/
        grid-column: span 2 / span 2; /*the first value defines the starting line, second value is ending line.
        if you say span 2 / span 2 this means start in the second column and span up until the end of column 2.*/
        margin: 0 auto;
        max-width: 1400px; /*these 2 width properties push the scroll arrow to the right. */
        width: 100%;
        
    }

    .contact {
        flex-direction: row; /*missed. apparently you said column before 
        so need to cange it to row here*/
        grid-column: span 2 / span 2; /*the first value defines the starting line, second value is ending line.
        if you say span 2 / span 2 this means start in the second column and span up until the end of column 2.*/
        margin: 0 auto;
        max-width: 1400px; /*these 2 width properties push the scroll arrow to the right. */
        width: 100%;
    }

}